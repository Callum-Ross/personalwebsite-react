{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Home","className","src","alt","About","Users","Resume","App","href","id","style","paddingLeft","paddingRight","class","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2RAyEA,SAASA,IACP,OACE,oCACE,yBAAKC,UAAU,SACb,2CACA,sEAC0C,6BAD1C,kGAMF,yBACEA,UAAU,OACVC,IAAI,yFACJC,IAAI,UAMZ,SAASC,IACP,OACE,yBAAKH,UAAU,SACb,2BACE,yCADF,oCAEE,6BAFF,WAIE,6BAJF,oHAYN,SAASI,IACP,OAAO,qCAET,SAASC,IACP,OAAO,sCAEMC,MA/Gf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,yBAAKN,UAAU,OACb,yBAAKA,UAAU,SAAf,eACA,yBAAKA,UAAU,QACb,uBAAGO,KAAK,sDACN,yBACEC,GAAG,WACHC,MAAO,CAAEC,YAAa,MAAOC,aAAc,OAC3CV,IAAI,2DACJC,IAAI,cAGR,uBAAGK,KAAK,kCACN,yBACEL,IAAI,SACJM,GAAG,SACHC,MAAO,CAAEC,YAAa,QAASC,aAAc,SAC7CV,IAAI,4DAGR,uBAAGM,KAAK,iDACN,yBACEL,IAAI,OACJM,GAAG,QACHC,MAAO,CAAEC,YAAa,QAASC,aAAc,SAC7CV,IAAI,4DAIV,6BACE,yBAAKD,UAAU,OACb,yBAAKY,MAAM,SACX,kBAAC,IAAD,CAAMC,GAAG,IAAIb,UAAU,QAAvB,QAGA,kBAAC,IAAD,CAAMa,GAAG,SAASb,UAAU,QAA5B,SAGA,kBAAC,IAAD,CAAMa,GAAG,YAAYb,UAAU,QAA/B,YAGA,kBAAC,IAAD,CAAMa,GAAG,UAAUb,UAAU,QAA7B,UAGA,yBAAKY,MAAM,WAIf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,UACV,kBAACX,EAAD,OAEF,kBAAC,IAAD,CAAOW,KAAK,aACV,kBAACV,EAAD,OAEF,kBAAC,IAAD,CAAOU,KAAK,KACV,kBAACf,EAAD,OAEF,kBAAC,IAAD,CAAOe,KAAK,WACV,kBAACT,EAAD,YCrDMU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c8d60e0e.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <div className=\"App\">\n          <div className=\"title\">Callum Ross</div>\n          <div className=\"img2\">\n            <a href=\"https://www.linkedin.com/in/callum-ross-b66996165/\">\n              <img\n                id=\"linkedin\"\n                style={{ paddingLeft: \"1em\", paddingRight: \"1em\" }}\n                src=\"https://unpkg.com/simple-icons@latest/icons/linkedin.svg\"\n                alt=\"linkedin\"\n              />\n            </a>\n            <a href=\"https://github.com/Callum-Ross\">\n              <img\n                alt=\"github\"\n                id=\"github\"\n                style={{ paddingLeft: \"0.5em\", paddingRight: \"0.5em\" }}\n                src=\"https://unpkg.com/simple-icons@latest/icons/github.svg\"\n              />\n            </a>\n            <a href=\" mailto:callumross275@gmail.com?Subject=Hello\">\n              <img\n                alt=\"mail\"\n                id=\"gmail\"\n                style={{ paddingLeft: \"0.5em\", paddingRight: \"0.5em\" }}\n                src=\"https://unpkg.com/simple-icons@latest/icons/gmail.svg\"\n              />\n            </a>\n          </div>\n          <nav>\n            <div className=\"nav\">\n              <div class=\"line\" />\n              <Link to=\"/\" className=\"link\">\n                Home\n              </Link>\n              <Link to=\"/about\" className=\"link\">\n                About\n              </Link>\n              <Link to=\"/projects\" className=\"link\">\n                Projects\n              </Link>\n              <Link to=\"/resume\" className=\"link\">\n                Resume\n              </Link>\n              <div class=\"line\" />\n            </div>\n          </nav>\n\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/projects\">\n              <Users />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/resume\">\n              <Resume />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\nfunction Home() {\n  return (\n    <>\n      <div className=\"texty\">\n        <h2>Hi there...</h2>\n        <p>\n          I am a Computer Science Student at QUT. <br /> I am currently in my\n          final year and enjoy web development, cloud computing and data\n          science.\n        </p>\n      </div>\n      <img\n        className=\"img1\"\n        src=\"https://www.pngkey.com/png/detail/432-4323109_sri-yantra-gold-geometric-shapes-png.png\"\n        alt=\"code\"\n      />\n    </>\n  );\n}\n\nfunction About() {\n  return (\n    <div className=\"texty\">\n      <p>\n        <h3>Studying:</h3>Bachelor of IT (Computer Science)\n        <br />\n        GPA: 6.6\n        <br />\n        Notable units Cloud Computing, Web Development, Software Development,\n        Databases, Statistics, Project Management\n      </p>\n    </div>\n  );\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\nfunction Resume() {\n  return <h2>Resume</h2>;\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"typeface-roboto\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}